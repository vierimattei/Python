/tmp/tmps_nsl15e/dolfin_expression_4b12556f698100c129cd540e29c92d66.cpp: In member function ‘virtual void dolfin::dolfin_expression_4b12556f698100c129cd540e29c92d66::eval(Eigen::Ref<Eigen::Matrix<double, -1, 1> >, Eigen::Ref<const Eigen::Matrix<double, -1, 1> >) const’:
/tmp/tmps_nsl15e/dolfin_expression_4b12556f698100c129cd540e29c92d66.cpp:73:36: error: ‘position_x’ was not declared in this scope
           values[0] = (((pow((x[0]-position_x[0]),2)+pow((x[1]-position_y[0]),2)+pow((x[2]-position_z[0]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[1]),2)+pow((x[1]-position_y[1]),2)+pow((x[2]-position_z[1]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[2]),2)+pow((x[1]-position_y[2]),2)+pow((x[2]-position_z[2]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[3]),2)+pow((x[1]-position_y[3]),2)+pow((x[2]-position_z[3]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[4]),2)+pow((x[1]-position_y[4]),2)+pow((x[2]-position_z[4]),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                    ^~~~~~~~~~
/tmp/tmps_nsl15e/dolfin_expression_4b12556f698100c129cd540e29c92d66.cpp:73:64: error: ‘position_y’ was not declared in this scope
           values[0] = (((pow((x[0]-position_x[0]),2)+pow((x[1]-position_y[0]),2)+pow((x[2]-position_z[0]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[1]),2)+pow((x[1]-position_y[1]),2)+pow((x[2]-position_z[1]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[2]),2)+pow((x[1]-position_y[2]),2)+pow((x[2]-position_z[2]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[3]),2)+pow((x[1]-position_y[3]),2)+pow((x[2]-position_z[3]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[4]),2)+pow((x[1]-position_y[4]),2)+pow((x[2]-position_z[4]),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                                                ^~~~~~~~~~
/tmp/tmps_nsl15e/dolfin_expression_4b12556f698100c129cd540e29c92d66.cpp:73:92: error: ‘position_z’ was not declared in this scope
           values[0] = (((pow((x[0]-position_x[0]),2)+pow((x[1]-position_y[0]),2)+pow((x[2]-position_z[0]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[1]),2)+pow((x[1]-position_y[1]),2)+pow((x[2]-position_z[1]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[2]),2)+pow((x[1]-position_y[2]),2)+pow((x[2]-position_z[2]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[3]),2)+pow((x[1]-position_y[3]),2)+pow((x[2]-position_z[3]),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x[4]),2)+pow((x[1]-position_y[4]),2)+pow((x[2]-position_z[4]),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                                                                            ^~~~~~~~~~
/tmp/tmps_nsl15e/dolfin_expression_4b12556f698100c129cd540e29c92d66.cpp: In member function ‘virtual double dolfin::dolfin_expression_4b12556f698100c129cd540e29c92d66::get_property(std::__cxx11::string) const’:
/tmp/tmps_nsl15e/dolfin_expression_4b12556f698100c129cd540e29c92d66.cpp:85:11: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
           if (name == "a0") return a0;          if (name == "ms") return ms;          if (name == "mgb") return mgb;          if (name == "G") return G;          if (name == "ly") return ly;          if (name == "kp") return kp;          if (name == "radius_tot") return radius_tot;          if (name == "volume_out") return volume_out;          if (name == "stand_dev") return stand_dev;          if (name == "p") return p;          if (name == "source_number") return source_number;          if (name == "source_mass") return source_mass;
           ^~
/tmp/tmps_nsl15e/dolfin_expression_4b12556f698100c129cd540e29c92d66.cpp:85:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
           if (name == "a0") return a0;          if (name == "ms") return ms;          if (name == "mgb") return mgb;          if (name == "G") return G;          if (name == "ly") return ly;          if (name == "kp") return kp;          if (name == "radius_tot") return radius_tot;          if (name == "volume_out") return volume_out;          if (name == "stand_dev") return stand_dev;          if (name == "p") return p;          if (name == "source_number") return source_number;          if (name == "source_mass") return source_mass;
                                                 ^~
