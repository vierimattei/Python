/tmp/tmpqobtkhn3/dolfin_expression_4836c8eeddd9828e41de4a6c06b42b88.cpp: In member function ‘virtual void dolfin::dolfin_expression_4836c8eeddd9828e41de4a6c06b42b88::eval(Eigen::Ref<Eigen::Matrix<double, -1, 1> >, Eigen::Ref<const Eigen::Matrix<double, -1, 1> >) const’:
/tmp/tmpqobtkhn3/dolfin_expression_4836c8eeddd9828e41de4a6c06b42b88.cpp:75:174: error: expected ‘)’ before ‘;’ token
           values[0] = a0*4*pi*G*mgb/pow((sigma*sqrt(2*pi)),3)*pow(2.7182818284590452353602874713526624977572,(-(1/2)*((pow(x[0],3) + pow(x[1],3)+ pow(x[2],3))/pow(sigma,2)));
                                                                                                                                                                              ^
/tmp/tmpqobtkhn3/dolfin_expression_4836c8eeddd9828e41de4a6c06b42b88.cpp: In member function ‘virtual double dolfin::dolfin_expression_4836c8eeddd9828e41de4a6c06b42b88::get_property(std::__cxx11::string) const’:
/tmp/tmpqobtkhn3/dolfin_expression_4836c8eeddd9828e41de4a6c06b42b88.cpp:87:11: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
           if (name == "a0") return a0;          if (name == "ms") return ms;          if (name == "mgb") return mgb;          if (name == "G") return G;          if (name == "ly") return ly;          if (name == "kp") return kp;          if (name == "radius_tot") return radius_tot;          if (name == "volume_out") return volume_out;          if (name == "x_close") return x_close;          if (name == "y_close") return y_close;          if (name == "z_close") return z_close;          if (name == "radius_close") return radius_close;          if (name == "eps") return eps;          if (name == "sigma") return sigma;
           ^~
/tmp/tmpqobtkhn3/dolfin_expression_4836c8eeddd9828e41de4a6c06b42b88.cpp:87:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
           if (name == "a0") return a0;          if (name == "ms") return ms;          if (name == "mgb") return mgb;          if (name == "G") return G;          if (name == "ly") return ly;          if (name == "kp") return kp;          if (name == "radius_tot") return radius_tot;          if (name == "volume_out") return volume_out;          if (name == "x_close") return x_close;          if (name == "y_close") return y_close;          if (name == "z_close") return z_close;          if (name == "radius_close") return radius_close;          if (name == "eps") return eps;          if (name == "sigma") return sigma;
                                                 ^~
