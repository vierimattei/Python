/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp: In member function ‘virtual void dolfin::dolfin_expression_4a9f2109f02ed0bd7563c95635578e78::eval(Eigen::Ref<Eigen::Matrix<double, -1, 1> >, Eigen::Ref<const Eigen::Matrix<double, -1, 1> >) const’:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: error: no matching function for call to ‘pow(Eigen::Ref<const Eigen::Matrix<double, -1, 1> >&, int)’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/features.h:424:0,
                 from /usr/include/x86_64-linux-gnu/c++/7/bits/os_defines.h:39,
                 from /usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h:533,
                 from /usr/include/c++/7/bits/stl_algobase.h:59,
                 from /usr/include/c++/7/vector:60,
                 from /usr/local/include/dolfin/function/Expression.h:24,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/x86_64-linux-gnu/bits/math-finite.h:156:1: note: candidate: double pow(double, double)
 __MATH_REDIRCALL (pow, , (_Mdouble_, _Mdouble_));
 ^
/usr/include/x86_64-linux-gnu/bits/math-finite.h:156:1: note:   no known conversion for argument 1 from ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ to ‘double’
In file included from /usr/local/lib/python3.6/dist-packages/ffc/backends/ufc/ufc_geometry.h:9:0,
                 from /usr/local/lib/python3.6/dist-packages/ffc/backends/ufc/ufc.h:22,
                 from /usr/local/include/dolfin/function/Expression.h:25,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/c++/7/cmath:388:3: note: candidate: constexpr float std::pow(float, float)
   pow(float __x, float __y)
   ^~~
/usr/include/c++/7/cmath:388:3: note:   no known conversion for argument 1 from ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ to ‘float’
/usr/include/c++/7/cmath:392:3: note: candidate: constexpr long double std::pow(long double, long double)
   pow(long double __x, long double __y)
   ^~~
/usr/include/c++/7/cmath:392:3: note:   no known conversion for argument 1 from ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ to ‘long double’
/usr/include/c++/7/cmath:415:5: note: candidate: template<class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type std::pow(_Tp, _Up)
     pow(_Tp __x, _Up __y)
     ^~~
/usr/include/c++/7/cmath:415:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/cmath: In substitution of ‘template<class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type std::pow(_Tp, _Up) [with _Tp = Eigen::Ref<const Eigen::Matrix<double, -1, 1> >; _Up = int]’:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52:   required from here
/usr/include/c++/7/cmath:415:5: error: no type named ‘__type’ in ‘struct __gnu_cxx::__promote<Eigen::Ref<const Eigen::Matrix<double, -1, 1> >, false>’
In file included from /usr/include/eigen3/Eigen/Core:80:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/c++/7/complex:989:5: note: candidate: template<class _Tp> std::complex<_Tp> std::pow(const std::complex<_Tp>&, int)
     pow(const complex<_Tp>& __z, int __n)
     ^~~
/usr/include/c++/7/complex:989:5: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ is not derived from ‘const std::complex<_Tp>’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:80:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/c++/7/complex:998:5: note: candidate: template<class _Tp> std::complex<_Tp> std::pow(const std::complex<_Tp>&, const _Tp&)
     pow(const complex<_Tp>& __x, const _Tp& __y)
     ^~~
/usr/include/c++/7/complex:998:5: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ is not derived from ‘const std::complex<_Tp>’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:80:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/c++/7/complex:1032:5: note: candidate: template<class _Tp> std::complex<_Tp> std::pow(const std::complex<_Tp>&, const std::complex<_Tp>&)
     pow(const complex<_Tp>& __x, const complex<_Tp>& __y)
     ^~~
/usr/include/c++/7/complex:1032:5: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ is not derived from ‘const std::complex<_Tp>’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:80:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/c++/7/complex:1043:5: note: candidate: template<class _Tp> std::complex<_Tp> std::pow(const _Tp&, const std::complex<_Tp>&)
     pow(const _Tp& __x, const complex<_Tp>& __y)
     ^~~
/usr/include/c++/7/complex:1043:5: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   mismatched types ‘const std::complex<_Tp>’ and ‘int’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:80:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/c++/7/complex:1864:5: note: candidate: template<class _Tp, class _Up> std::complex<typename __gnu_cxx::__promote_2<_Tp, _Up>::__type> std::pow(const std::complex<_Tp>&, const _Up&)
     pow(const std::complex<_Tp>& __x, const _Up& __y)
     ^~~
/usr/include/c++/7/complex:1864:5: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ is not derived from ‘const std::complex<_Tp>’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:80:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/c++/7/complex:1872:5: note: candidate: template<class _Tp, class _Up> std::complex<typename __gnu_cxx::__promote_2<_Tp, _Up>::__type> std::pow(const _Tp&, const std::complex<_Up>&)
     pow(const _Tp& __x, const std::complex<_Up>& __y)
     ^~~
/usr/include/c++/7/complex:1872:5: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   mismatched types ‘const std::complex<_Up>’ and ‘int’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:80:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/c++/7/complex:1880:5: note: candidate: template<class _Tp, class _Up> std::complex<typename __gnu_cxx::__promote_2<_Tp, _Up>::__type> std::pow(const std::complex<_Tp>&, const std::complex<_Up>&)
     pow(const std::complex<_Tp>& __x, const std::complex<_Up>& __y)
     ^~~
/usr/include/c++/7/complex:1880:5: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ is not derived from ‘const std::complex<_Tp>’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:513:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/eigen3/Eigen/src/Core/GlobalFunctions.h:169:3: note: candidate: template<class Derived> const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Derived::Scalar, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Derived::Scalar>::type, const Derived> Eigen::pow(const typename Derived::Scalar&, const Eigen::ArrayBase<Derived>&)
   pow(const typename Derived::Scalar& x, const Eigen::ArrayBase<Derived>& exponents)
   ^~~
/usr/include/eigen3/Eigen/src/Core/GlobalFunctions.h:169:3: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   mismatched types ‘const Eigen::ArrayBase<Derived>’ and ‘int’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:513:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/eigen3/Eigen/src/Core/GlobalFunctions.h:161:3: note: candidate: template<class Scalar, class Derived> typename Eigen::internal::enable_if<((! Eigen::internal::is_same<typename Derived::Scalar, Scalar>::value) && Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<Scalar, typename Derived::Scalar, Eigen::internal::scalar_pow_op<Scalar, typename Derived::Scalar> > >::value), const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<Scalar, typename Eigen::internal::traits<_Rhs>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, Scalar>::type, const Derived> >::type Eigen::pow(const Scalar&, const Eigen::ArrayBase<ExponentDerived>&)
   pow(const Scalar& x, const Eigen::ArrayBase<Derived>& exponents)
   ^~~
/usr/include/eigen3/Eigen/src/Core/GlobalFunctions.h:161:3: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   mismatched types ‘const Eigen::ArrayBase<ExponentDerived>’ and ‘int’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:513:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/eigen3/Eigen/src/Core/GlobalFunctions.h:132:3: note: candidate: template<class Derived, class ExponentDerived> const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Derived::Scalar, typename ExponentDerived::Scalar>, const Derived, const ExponentDerived> Eigen::pow(const Eigen::ArrayBase<Derived>&, const Eigen::ArrayBase<ExponentDerived>&)
   pow(const Eigen::ArrayBase<Derived>& x, const Eigen::ArrayBase<ExponentDerived>& exponents)
   ^~~
/usr/include/eigen3/Eigen/src/Core/GlobalFunctions.h:132:3: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ is not derived from ‘const Eigen::ArrayBase<Derived>’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:513:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/eigen3/Eigen/src/Core/GlobalFunctions.h:114:3: note: candidate: template<class Derived> const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Derived::Scalar>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Derived::Scalar>::type> Eigen::pow(const Eigen::ArrayBase<Derived>&, const typename Derived::Scalar&)
   pow(const Eigen::ArrayBase<Derived>& x, const typename Derived::Scalar& exponent) {
   ^~~
/usr/include/eigen3/Eigen/src/Core/GlobalFunctions.h:114:3: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ is not derived from ‘const Eigen::ArrayBase<Derived>’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
In file included from /usr/include/eigen3/Eigen/Core:513:0,
                 from /usr/include/eigen3/Eigen/Dense:1,
                 from /usr/local/include/dolfin/function/Expression.h:26,
                 from /tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:13:
/usr/include/eigen3/Eigen/src/Core/GlobalFunctions.h:108:3: note: candidate: template<class Derived, class ScalarExponent> typename Eigen::internal::enable_if<((! Eigen::internal::is_same<typename Derived::Scalar, ScalarExponent>::value) && Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value), const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, ScalarExponent>, const Derived, const typename Eigen::internal::plain_constant_type<Expr, Scalar>::type> >::type Eigen::pow(const Eigen::ArrayBase<Derived>&, const ScalarExponent&)
   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent) {
   ^~~
/usr/include/eigen3/Eigen/src/Core/GlobalFunctions.h:108:3: note:   template argument deduction/substitution failed:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:52: note:   ‘Eigen::Ref<const Eigen::Matrix<double, -1, 1> >’ is not derived from ‘const Eigen::ArrayBase<Derived>’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                    ^
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:58: error: ‘y’ was not declared in this scope
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                          ^
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:58: note: suggested alternative: ‘yn’
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                          ^
                                                          yn
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:69:67: error: ‘z’ was not declared in this scope
           values[0] = sqrt(G*mgb*a)*1/2*log(pow(x,2)+pow(y,2)+pow(z,2);
                                                                   ^
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp: In member function ‘virtual double dolfin::dolfin_expression_4a9f2109f02ed0bd7563c95635578e78::get_property(std::__cxx11::string) const’:
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:81:11: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
           if (name == "a") return a;          if (name == "ms") return ms;          if (name == "mgb") return mgb;          if (name == "G") return G;          if (name == "ly") return ly;          if (name == "kp") return kp;          if (name == "radius_tot") return radius_tot;          if (name == "volume_out") return volume_out;
           ^~
/tmp/tmp9ixa7os_/dolfin_expression_4a9f2109f02ed0bd7563c95635578e78.cpp:81:47: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
           if (name == "a") return a;          if (name == "ms") return ms;          if (name == "mgb") return mgb;          if (name == "G") return G;          if (name == "ly") return ly;          if (name == "kp") return kp;          if (name == "radius_tot") return radius_tot;          if (name == "volume_out") return volume_out;
                                               ^~
