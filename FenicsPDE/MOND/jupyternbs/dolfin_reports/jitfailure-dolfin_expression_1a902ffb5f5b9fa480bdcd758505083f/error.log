/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp: In member function ‘virtual void dolfin::dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f::eval(Eigen::Ref<Eigen::Matrix<double, -1, 1> >, Eigen::Ref<const Eigen::Matrix<double, -1, 1> >) const’:
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp:73:36: error: ‘position_x0’ was not declared in this scope
           values[0] = (((pow((x[0]-position_x0),2)+pow((x[1]-position_y0),2)+pow((x[2]-position_z0),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x1),2)+pow((x[1]-position_y1),2)+pow((x[2]-position_z1),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                    ^~~~~~~~~~~
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp:73:62: error: ‘position_y0’ was not declared in this scope
           values[0] = (((pow((x[0]-position_x0),2)+pow((x[1]-position_y0),2)+pow((x[2]-position_z0),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x1),2)+pow((x[1]-position_y1),2)+pow((x[2]-position_z1),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                                              ^~~~~~~~~~~
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp:73:62: note: suggested alternative: ‘__builtin_y0’
           values[0] = (((pow((x[0]-position_x0),2)+pow((x[1]-position_y0),2)+pow((x[2]-position_z0),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x1),2)+pow((x[1]-position_y1),2)+pow((x[2]-position_z1),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                                              ^~~~~~~~~~~
                                                              __builtin_y0
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp:73:88: error: ‘position_z0’ was not declared in this scope
           values[0] = (((pow((x[0]-position_x0),2)+pow((x[1]-position_y0),2)+pow((x[2]-position_z0),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x1),2)+pow((x[1]-position_y1),2)+pow((x[2]-position_z1),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                                                                        ^~~~~~~~~~~
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp:73:141: error: ‘position_x1’ was not declared in this scope
           values[0] = (((pow((x[0]-position_x0),2)+pow((x[1]-position_y0),2)+pow((x[2]-position_z0),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x1),2)+pow((x[1]-position_y1),2)+pow((x[2]-position_z1),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                                                                                                                             ^~~~~~~~~~~
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp:73:167: error: ‘position_y1’ was not declared in this scope
           values[0] = (((pow((x[0]-position_x0),2)+pow((x[1]-position_y0),2)+pow((x[2]-position_z0),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x1),2)+pow((x[1]-position_y1),2)+pow((x[2]-position_z1),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                                                                                                                                                       ^~~~~~~~~~~
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp:73:167: note: suggested alternative: ‘__builtin_y1’
           values[0] = (((pow((x[0]-position_x0),2)+pow((x[1]-position_y0),2)+pow((x[2]-position_z0),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x1),2)+pow((x[1]-position_y1),2)+pow((x[2]-position_z1),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                                                                                                                                                       ^~~~~~~~~~~
                                                                                                                                                                       __builtin_y1
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp:73:193: error: ‘position_z1’ was not declared in this scope
           values[0] = (((pow((x[0]-position_x0),2)+pow((x[1]-position_y0),2)+pow((x[2]-position_z0),2)) <=pow(radius_tot, 2)) ||((pow((x[0]-position_x1),2)+pow((x[1]-position_y1),2)+pow((x[2]-position_z1),2)) <=pow(radius_tot, 2)))? a0*4*pi*G*source_mass/volume_out : 0;
                                                                                                                                                                                                 ^~~~~~~~~~~
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp: In member function ‘virtual double dolfin::dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f::get_property(std::__cxx11::string) const’:
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp:85:11: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
           if (name == "a0") return a0;          if (name == "ms") return ms;          if (name == "mgb") return mgb;          if (name == "G") return G;          if (name == "ly") return ly;          if (name == "kp") return kp;          if (name == "radius_tot") return radius_tot;          if (name == "volume_out") return volume_out;          if (name == "stand_dev") return stand_dev;          if (name == "p") return p;          if (name == "source_number") return source_number;          if (name == "source_mass") return source_mass;
           ^~
/tmp/tmp2vth66rw/dolfin_expression_1a902ffb5f5b9fa480bdcd758505083f.cpp:85:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
           if (name == "a0") return a0;          if (name == "ms") return ms;          if (name == "mgb") return mgb;          if (name == "G") return G;          if (name == "ly") return ly;          if (name == "kp") return kp;          if (name == "radius_tot") return radius_tot;          if (name == "volume_out") return volume_out;          if (name == "stand_dev") return stand_dev;          if (name == "p") return p;          if (name == "source_number") return source_number;          if (name == "source_mass") return source_mass;
                                                 ^~
