/tmp/tmpuyjnusi5/dolfin_expression_47332be8a28f5698f9cb5dffa64750f7.cpp: In member function ‘virtual void dolfin::dolfin_expression_47332be8a28f5698f9cb5dffa64750f7::eval(Eigen::Ref<Eigen::Matrix<double, -1, 1> >, Eigen::Ref<const Eigen::Matrix<double, -1, 1> >) const’:
/tmp/tmpuyjnusi5/dolfin_expression_47332be8a28f5698f9cb5dffa64750f7.cpp:75:45: error: ‘stand_dev’ was not declared in this scope
           values[0] = a0*4*pi*G*mgb*(1/pow((stand_dev*sqrt(2*pi)),3))*exp(-(1/2)*((pow(x[0],2) + pow(x[1],2)+ pow(x[2],2))/(pow(stand_dev,2))));
                                             ^~~~~~~~~
/tmp/tmpuyjnusi5/dolfin_expression_47332be8a28f5698f9cb5dffa64750f7.cpp: In member function ‘virtual double dolfin::dolfin_expression_47332be8a28f5698f9cb5dffa64750f7::get_property(std::__cxx11::string) const’:
/tmp/tmpuyjnusi5/dolfin_expression_47332be8a28f5698f9cb5dffa64750f7.cpp:87:11: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
           if (name == "a0") return a0;          if (name == "ms") return ms;          if (name == "mgb") return mgb;          if (name == "G") return G;          if (name == "ly") return ly;          if (name == "kp") return kp;          if (name == "radius_tot") return radius_tot;          if (name == "volume_out") return volume_out;          if (name == "x_close") return x_close;          if (name == "y_close") return y_close;          if (name == "z_close") return z_close;          if (name == "radius_close") return radius_close;          if (name == "eps") return eps;          if (name == "marmar") return marmar;
           ^~
/tmp/tmpuyjnusi5/dolfin_expression_47332be8a28f5698f9cb5dffa64750f7.cpp:87:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
           if (name == "a0") return a0;          if (name == "ms") return ms;          if (name == "mgb") return mgb;          if (name == "G") return G;          if (name == "ly") return ly;          if (name == "kp") return kp;          if (name == "radius_tot") return radius_tot;          if (name == "volume_out") return volume_out;          if (name == "x_close") return x_close;          if (name == "y_close") return y_close;          if (name == "z_close") return z_close;          if (name == "radius_close") return radius_close;          if (name == "eps") return eps;          if (name == "marmar") return marmar;
                                                 ^~
